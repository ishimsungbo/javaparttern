1. Light 클래스가 존재한다. 이 클래스에는 on, off 메서드가 존재하며 어떤 기능을 수행한다.
    ==> 단순히 이 객체를 생성해서 메서드를 수행하는것과 무엇이 다를까?

2. Command 인터페이스를 만든다.

3-4의 순서가 바뀔 수 있는데. 같이 중요한 핵심.

LightOnCommand, SimpleRemoteControl

3.LightOnCommand 객채는 Command의 execute() 메서드를 구현하는데. 이 틀안에
  Light 객체의 메서드를 붙여 구현한다. 그리고 Light 를 주입받는다.

4. SimpleRemoteControl 은 느슨한 연결을 위해 필요한 객체인데
   Commend 를 주입받는다. 그리고 Command의 execute()를 실행하는 메서드를 만든다.
   buttonWasPressed();

5. 실행. 단순히 Light의 메서드를 실행하는 것이 아니다.
   RemoteControlTest 코드.
   SimpleRemoteControl이 말그대로 리모컨이다. 이 객체 안에 여러개의 기능을 실행 할 수 있는
   객체를 넣어서 실행한다. 리포컨 버튼은 하나지만
   이것저것 remote.setSlot(loomLight); 슬롯에 여러기능을 추가 또는 바꾸어가면
   LightOnCommand 이런 느슨한 것들말이다...
   안방, 부엌, 작은방, TV 까지도 바꾸어 가며 편하게 사용한다.